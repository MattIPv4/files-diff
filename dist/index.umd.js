!function(e,d){"object"==typeof exports&&"undefined"!=typeof module?module.exports=d(require("string-similarity"),require("diff"),require("escape-html")):"function"==typeof define&&define.amd?define(["string-similarity","diff","escape-html"],d):(e||self).filesDiff=d(e.stringSimilarity,e.diff,e.escapeHtml)}(this,function(e,d,t){function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=n(e),i=n(t);function a(){return(a=Object.assign||function(e){for(var d=1;d<arguments.length;d++){var t=arguments[d];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}const o=(e,d)=>{if(d.highlightFunction){const t=e.value.match(/^(\s*)(.*)(\s*)$/),n=d.highlightFunction(t?t[2]:e.value,e.added,e.removed);e.value=`${t?t[1]:""}${n}${t?t[3]:""}`}return e};var l=(e,d)=>{const t=e.reduce((e,t,n,r)=>{const l=a({},t);if(d.escapeHtml&&(l.value=i.default(l.value)),l.added=!!l.added,l.removed=!!l.removed,"count"in l&&delete l.count,!l.removed&&!l.added)return e.push(l),e;if(!d.ignoreWhitespace)return e.push(o(l,d)),e;if(n>0&&(r[n-1].removed&&t.added||r[n-1].added&&t.removed)&&r[n-1].value.replace(/\s/g,"")===t.value.replace(/\s/g,""))return e.push({added:!1,removed:!1,value:l.value}),e;if(n<r.length-1&&(r[n+1].removed&&t.added||r[n+1].added&&t.removed)&&r[n+1].value.replace(/\s/g,"")===t.value.replace(/\s/g,""))return e;const s=l.value.split("\n").map((e,d,t)=>`${e}${d<t.length-1?"\n":""}`);for(const t of s)e.push(o({added:l.added,removed:l.removed,value:t},d));return e},[]),n={added:null,removed:null};return t.reduce((e,d)=>(d.added===n.added&&d.removed===n.removed?e[e.length-1].value+=d.value:e.push(d),n.added=d.added,n.removed=d.removed,e),[])},s=(e,t,n)=>{const r=d.diffChars(t,e);return l(r,n)},u=(e,t,n)=>{const r=d.diffLines(t,e);return l(r,n)};return(e,d,t)=>{(t=t||{}).similarity="number"==typeof t.similarity?Math.min(Math.max(t.similarity,0),1):.5,t.newAsAdded=void 0!==t.newAsAdded&&!!t.newAsAdded,t.escapeHtml=void 0===t.escapeHtml||!!t.escapeHtml,t.ignoreWhitespace=void 0===t.ignoreWhitespace||!!t.ignoreWhitespace;const n=((e,d,t)=>{const n=Object.keys(e),i=Object.keys(d),a=i.filter(e=>!n.includes(e)),o=n.filter(e=>!i.includes(e)),l=new Set(o),s={};for(const n of a){if(0===l.size)continue;const i=Array.from(l).map(d=>[d,e[d]]),a=r.default.findBestMatch(d[n],i.map(e=>e[1]));if(a.bestMatch.rating<t)continue;const o=i[a.bestMatchIndex][0];s[o]=n,l.delete(o)}return s})(e,d,t.similarity),i={};for(const r in e){if(!Object.prototype.hasOwnProperty.call(e,r))continue;i[r]={name:[{added:!1,removed:!1,value:r}],content:[{added:!1,removed:!1,value:e[r]}]};const a=r in n?n[r]:r in d?r:null,o=a?d[a]:null;null!==a?(r!==a&&(i[r].name=s(r,a,t)),e[r]!==o&&(i[r].content=u(e[r],o,t))):(i[r].name[0].added=t.newAsAdded,i[r].content[0].added=t.newAsAdded)}return i}});
